#!/usr/bin/php

common {
    plugin_dir = /usr/local/manticore/lib
}

searchd {
    listen    = 3312:mysql
    listen    = /run/manticore/sphinx.sock:mysql
    log       = /var/log/manticore/searchd.log
    pid_file  = /run/manticore/searchd.pid
    binlog_path = /var/lib/manticore
}

indexer {
    mem_limit = 256M
}

source base_source {
    type     = mysql

    <?php include('config.inc.php'); ?>

    sql_query_pre = SET CHARACTER_SET_RESULTS=utf8mb4
    sql_query_pre = SET NAMES utf8mb4
    sql_query_pre = SET SESSION query_cache_type=OFF
}

# Documentation notes:
#  - min_infix_len >= 1 forces min_prefix_len = 1
#  - expand_keywords = 1 is equal to star, exact
# Implementation notes:
#  - min_infix_len is enabled to allow partial matches for kana (eg. DECO -> YUREIDECO)
#  - Kana sound mark symbols (eg. U+30FB) are defined as blend_chars to facilitate searching them while at the same time
#    treating them as separators (ie. YUREI-DECO = YUREIDECO)
#  - Accordingly, index_exact_words is enabled to rank exact matches (including blend_chars) higher
#  - Full set of kana characters are redefined in charset_table as default cjk reduces voiced and semi-voiced variants to their root form,
#    which results in false-positives when searching (this is usually desired behavior but our use-case is for search proper names, not lexical form)
#  - morphology is currently set to closest available one (icu_chinese) which is not perfect, butstill better than N-gram for our use-case.
<?php
    $delta_index = "
        min_word_len = 1
        min_stemming_len = 3
        min_infix_len = 2

        html_strip = 1
        expand_keywords = 1
        index_exact_words = 1
        charset_table = non_cjk, cjk, U+3041..U+3096, U+30A0..U+30FA
        morphology = icu_chinese

        blend_chars = !, ., U+23, ?, U+5B, U+5C, U+5D, U+2C, U+60, U+3B, U+7C, U+7E, \", $, %, ', (, ), *, +, /, :, <, =, >, ^, @, U+3099..U+309F, U+30FB..U+30FF
        blend_mode = trim_none, trim_head, trim_tail, trim_both, trim_all
    ";

    $base_index = PHP_EOL . $delta_index;
?>

source anime_yuki : base_source {
    <?php
        $anime_query = static function($where) {
            return "SELECT tg.ID AS ID, \
                    0 AS Section, \
                    tg.Name AS GroupName, \
                    IF(t.GameType != '',GROUP_CONCAT(t.GameType),NULL) AS GameType, \
                    tg.Year AS Year, \
                    tg.CategoryID AS CategoryID, \
                    IF((tg.CategoryID!='5'), \
                            CONCAT_WS(' ',a.Name,a.Name2,a.Name3,a.Name4,(IF((tg.CategoryID=3 AND t.RemasterTitle!=''),GROUP_CONCAT(DISTINCT SUBSTRING(t.RemasterTitle FROM 7) SEPARATOR ' '),''))), \
                            tg.Name \
                    ) AS SeriesNames, \
                    IF(tg.CategoryID=2,IF(t.SpecificType IS NULL OR t.SpecificType='','Archived Scans',t.SpecificType),NULL) as SpecificType, \
                    IF(COUNT(sg.SeriesID) > 0, CONCAT_WS(' ',af.Name,af.Name2,af.Name3,af.Name4), NULL) AS FranchiseNames, \
                    IF((tg.CategoryID!='5'), CONCAT_WS(' ',a.Name,a.Name2,a.Name3,a.Name4), tg.Name) AS Name, \
                    UNIX_TIMESTAMP(MAX(t.Time)) AS GroupTime, \
                    IF(tg.CategoryID=1,GROUP_CONCAT(DISTINCT(t.RemasterTitle) SEPARATOR ' '),NULL) AS ReleaseGroup, \
                    IF((tg.CategoryID=2 AND tg.Name='Artbook'),CONCAT_WS(' ',t.ArtbookTitle),NULL) AS ArtbookTitle, \
                    IF(tg.CategoryID=1,tg.EpCount,0) AS EpCount, \
                    CONCAT((SELECT GROUP_CONCAT(DISTINCT IFNULL(tags.Name, '') SEPARATOR ' ') FROM torrents_group AS g LEFT JOIN torrents_tags AS tt ON tt.GroupID=g.ID LEFT JOIN tags ON tags.ID=tt.TagID  WHERE g.ID=tg.ID),' \#abg-',tg.ID, ' @everything') AS TagList, \
                    IF(tg.CategoryID=1,IF(MAX(tg.Ongoing='1'),'1','0'),'0') AS Airing, \
                    IF(MAX(t.Hentai='1'),'1','0') AS Hentai, \
                    IF(MAX(t.Censored='1'),'1','0') AS Censored, \
                    IF((tg.CategoryID=1 OR tg.CategoryID=4), \
                            CONCAT_WS(' ',GROUP_CONCAT(DISTINCT t.Media SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Containers SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Codecs SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Resolution SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Audio SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.AudioChannels SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Translated SEPARATOR ' ') ), \
                            IF(tg.CategoryID=2,CONCAT_WS(' ',GROUP_CONCAT(DISTINCT IF(t.Scanlated='1' AND tg.Name!='Artbook','Scanlated','Raw') SEPARATOR ' '), GROUP_CONCAT(DISTINCT IF(t.Ongoing='1' AND tg.Name!='Artbook','Ongoing','') SEPARATOR ' '), GROUP_CONCAT(DISTINCT IF(t.Digital='1' AND tg.Name!='Artbook' AND tg.Name!='Light Novel','Digital','') SEPARATOR ' ') ),  \
                            IF(tg.CategoryID=3,CONCAT_WS(' ',GROUP_CONCAT(DISTINCT t.GameType SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.GamePlatform SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.GameRegion SEPARATOR ' '), GROUP_CONCAT(DISTINCT IF(t.Translated='1','Translated','') SEPARATOR ' ') ),NULL))) AS Properties, \
                    IF(MAX(t.DualAudio='1'),'1','0') AS DualAudio, \
                    IF(MAX(t.DownMultiplier=0),'1','0') AS Freeleech, \
                    IF(tg.WikiBody='', '1', '0') AS WikiBody, \
                    IF(tg.CategoryID=1,(SELECT GROUP_CONCAT(cc.Name SEPARATOR ' ') FROM company_collages AS cc JOIN company_collages_torrents AS cct ON cct.CollageID=cc.ID WHERE cct.GroupID=tg.ID AND cc.CompanyType='studio'), \
                            IF(tg.CategoryID=3,(SELECT GROUP_CONCAT(cc.Name SEPARATOR ' ') FROM company_collages AS cc JOIN company_collages_torrents AS cct ON cct.CollageID=cc.ID WHERE cct.GroupID=tg.ID AND cc.CompanyType='company'), \
                            (SELECT GROUP_CONCAT(cc.Name SEPARATOR ' ') FROM company_collages AS cc JOIN company_collages_torrents AS cct ON cct.CollageID=cc.ID WHERE cct.GroupID=tg.ID AND cc.CompanyType='publisher')) ) AS CompanyNames, \
                    IF((tg.CategoryID=1 OR tg.CategoryID=2), \
                            (SELECT GROUP_CONCAT( p.Name SEPARATOR ' ') FROM people AS p JOIN people_associations AS pa ON pa.PeopleID=p.ID WHERE pa.JoinID=tg.ID AND pa.Type='staff'), \
                            NULL) AS PeopleNames, \
                    MAX(t.Size) AS Size, \
                    IFNULL(AVG(r.Vote), 0) AS Rating, \
                    (SELECT COUNT(rr.Vote) FROM ratings AS rr WHERE rr.GroupID = tg.ID AND rr.Type = t.TorrentType) as Votes, \
                    IF(MIN(t.Status) = 0, '1', '0') AS HasActive \
                        FROM torrents_group AS tg \
                        LEFT JOIN artists AS a ON a.ID=tg.SeriesID \
                        LEFT JOIN series_groups AS sg ON sg.SeriesID=tg.SeriesID \
                        LEFT JOIN artists AS af ON af.ID=sg.FranchiseID \
                        JOIN torrents AS t ON tg.ID=t.GroupID \
                        LEFT JOIN ratings AS r ON tg.ID=r.GroupID AND r.Type = t.TorrentType \
                        WHERE t.TorrentType='anime' AND $where \
                        GROUP BY tg.ID;";
        }
    ?>

    sql_query = <?= $anime_query("1 = 1") ?>

    <?php
        $anime_fields = "
            sql_attr_timestamp = GroupTime
            sql_attr_uint = Year
            sql_attr_uint = CategoryID
            sql_attr_uint = EpCount

            sql_attr_bool = DualAudio

            sql_attr_bool = Hentai
            sql_attr_bool = Airing
            sql_attr_bool = Censored
            sql_attr_bool = Freeleech
            sql_attr_bool = WikiBody

            sql_attr_bigint = Size
            sql_attr_float = Rating
            sql_attr_uint = Votes
            sql_attr_bool = HasActive

            sql_attr_bool = Section

            sql_field_string = Name
            sql_field_string = GameType
            sql_field_string = SeriesNames
            sql_field_string = FranchiseNames
            sql_field_string = SpecificType
        ";
    ?>

    <?= $anime_fields ?>
}

source delta_anime_yuki : base_source {
    sql_query = <?= $anime_query("tg.ID IS NOT NULL AND tg.Time > (UNIX_TIMESTAMP() - (86400)) AND tg.Time > 0") ?>

    <?= $anime_fields ?>
}

# ---

source music_yuki : base_source {
    <?php
        $music_query = static function($where) {
            return "SELECT tg.ID AS ID, \
                1 AS Section, \
                0 AS Hentai, \
                tg.`Type` AS `Type`, \
                CONCAT_WS(' ',tg.Name,IF(tg.Name2 IS NOT NULL,tg.Name2,'')) AS GroupName, \
                CONCAT_WS(' ',tg.Name,IF(tg.Name2 IS NOT NULL,tg.Name2,'')) AS Name, \
                YEAR(tg.Date) AS Year, \
                tg.CategoryID AS CategoryID, \
                tg.CDType AS CDType, \
                UNIX_TIMESTAMP(MAX(t.Time)) AS GroupTime, \
                CONCAT_WS(' ',GROUP_CONCAT(DISTINCT(a.Name) SEPARATOR ' '),IF((a.Name2 IS NOT NULL),GROUP_CONCAT(DISTINCT(a.Name2) SEPARATOR ' '),'') ) AS ArtistNames, \
                CONCAT((SELECT GROUP_CONCAT(DISTINCT IFNULL(tags2.Name, '') SEPARATOR ' ') FROM torrents_group2 AS g LEFT JOIN torrents_tags2 AS tt ON tt.GroupID=g.ID LEFT JOIN tags2 ON tags2.ID=tt.TagID  WHERE g.ID=tg.ID),' \#abg2-',tg.ID, ' @everything') AS TagList, \
                IF(tg.CategoryID=1 OR tg.CategoryID=5, \
                    CONCAT_WS(' ',GROUP_CONCAT(DISTINCT t.Encoding SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Bitrate SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.CDMedia SEPARATOR ' ') ), \
                        IF((tg.CategoryID=2 OR tg.CategoryID=3 OR tg.CategoryID=4), \
                            CONCAT_WS(' ',GROUP_CONCAT(DISTINCT t.Media SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Containers SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Codecs SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Resolution SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Audio SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.AudioChannels SEPARATOR ' '), GROUP_CONCAT(IF(t.Translated='1','Translated',t.Translated) SEPARATOR ' ') ), \
                                CONCAT_WS(' ',GROUP_CONCAT(DISTINCT t.Encoding SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Bitrate SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.CDMedia SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Media SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Containers SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Codecs SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Resolution SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.Audio SEPARATOR ' '), GROUP_CONCAT(DISTINCT t.AudioChannels SEPARATOR ' '), GROUP_CONCAT(IF(t.Translated='1','Translated',t.Translated) SEPARATOR ' ') ))) AS Properties, \
                IF(t.CatalogNumber!='',GROUP_CONCAT(DISTINCT t.CatalogNumber SEPARATOR ' '),NULL) AS catalog, \
                IF(t.RemasterTitle!='',GROUP_CONCAT(DISTINCT t.RemasterTitle SEPARATOR ' '),NULL) AS RemasterTitle, \
                IF(tg.Type='ost', \
                    (SELECT CONCAT_WS(' ',GROUP_CONCAT(DISTINCT(a.Name) SEPARATOR ' '),IF(vs.SongTitle!='',IF(vs.Type2='0','Opening',IF(vs.Type2='1','Ending','Insert')),''),GROUP_CONCAT(vs.SongTitle SEPARATOR ' ')) \
                        FROM various_series AS vs \
                        JOIN artists AS a ON vs.SeriesID = a.ID \
                        WHERE vs.GroupID = tg.ID), \
                            NULL) AS seriesnames, \
                IF(tg.Type='ost', \
                    (SELECT CONCAT_WS(' ',GROUP_CONCAT(DISTINCT(IF(vs.SongTitle!='',IF(vs.Type2='0','Opening',IF(vs.Type2='1','Ending','Insert')),'')) SEPARATOR ' ')) \
                        FROM various_series AS vs \
                        JOIN artists AS a ON vs.SeriesID = a.ID \
                        WHERE vs.GroupID = tg.ID), \
                            NULL) AS AssociationType, \
                IF(MAX(t.HasCue='1'),'1','0') AS Cue, \
                IF(MAX(t.HasLog='1'),'1','0') AS Log, \
                IF(MAX(t.Remastered='1'),'1','0') AS Remastered, \
                IF(MAX(t.DownMultiplier=0),'1','0') AS Freeleech, \
                MAX(t.Size) AS Size, \
                IFNULL(AVG(r.Vote), 0) AS Rating, \
                (SELECT COUNT(rr.Vote) FROM ratings AS rr WHERE rr.GroupID = tg.ID AND rr.Type = t.TorrentType) as Votes, \
                IF(MIN(t.Status) = 0, '1', '0') AS HasActive \
                            FROM torrents_group2 AS tg \
                            LEFT JOIN various_artists AS va ON va.GroupID=tg.ID \
                            LEFT JOIN artists2 AS a ON a.ID=va.ArtistID \
                            JOIN torrents AS t ON tg.ID=t.GroupID \
                            LEFT JOIN ratings AS r ON tg.ID=r.GroupID AND r.Type = t.TorrentType \
                            WHERE t.TorrentType='music' AND $where \
                            GROUP BY tg.ID;";
        }
    ?>

    sql_query = <?= $music_query("1 = 1") ?>

    <?php
        $music_fields = "
            sql_attr_timestamp = GroupTime
            sql_attr_uint = Year
            sql_attr_uint = CategoryID

            sql_attr_bool = Cue
            sql_attr_bool = Log
            sql_attr_bool = Remastered
            sql_attr_bool = Freeleech

            sql_attr_bigint = Size
            sql_attr_float = Rating
            sql_attr_uint = Votes
            sql_attr_bool = HasActive

            sql_attr_bool = Section
            sql_attr_bool = Hentai

            sql_field_string = Name
        ";
    ?>

    <?= $music_fields ?>
}

source delta_music_yuki : base_source {
    sql_query = <?= $music_query("tg.ID IS NOT NULL AND tg.Time > (UNIX_TIMESTAMP() - (86400)) AND tg.Time > 0") ?>

    <?= $music_fields ?>
}

# --

index anime_yuki {
    source = anime_yuki
    path = /var/lib/manticore/data/anime_yuki

    <?= $base_index ?>
}

index delta_anime_yuki {
    source = delta_anime_yuki
    path = /var/lib/manticore/data/delta_anime_yuki

    <?= $delta_index ?>
}

# --

index music_yuki {
    source = music_yuki
    path = /var/lib/manticore/data/music_yuki

    <?= $base_index ?>
}

index delta_music_yuki {
    source = delta_music_yuki
    path = /var/lib/manticore/data/delta_music_yuki

    <?= $delta_index ?>
}
